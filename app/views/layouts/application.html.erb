<!DOCTYPE html>
<html>
  <head>
    <title>Issues tracker</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= stylesheet_link_tag "tailwind", "inter-font", "data-turbo-track": "reload" %>
    <%= stylesheet_link_tag "application" %>

    <%= javascript_importmap_tags %>
    <%= favicon_link_tag asset_path('problem.png') %>
    <%# <%= javascript_include_tag "application", "data-turbo-track": "reload", defer: true %>
  </head>

<% if controller.controller_name != 'static_pages' %>
  <body x-data="setup()" :class="{ 'dark': isDark }">
    <div class="min-h-screen flex flex-col flex-auto flex-shrink-0 antialiased bg-white dark:bg-gray-700 text-black dark:text-white">

      <%= render "layouts/nav" %>

      <main class="h-full ml-14 mt-14 mb-10 md:ml-64">

        <%= render "layouts/aside" %>

        <%= render "layouts/alert" %>

        <%= yield %>

        <%# <%= render "layouts/footer" %>

      </main>

    </div>
    <script>
      var setup = () => {
        const getTheme = () => {
          if (window.localStorage.getItem('dark')) {
            return JSON.parse(window.localStorage.getItem('dark'))
          }
          return !!window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches
        }

        const setTheme = (value) => {
          window.localStorage.setItem('dark', value)
        }

        return {
          loading: true,
          isDark: getTheme(),
          toggleTheme() {
            this.isDark = !this.isDark
            setTheme(this.isDark)
          },
        }
      }
    </script>
    <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.8.0/dist/alpine.min.js" defer></script>
  </body>

<% else %>

  <%= yield %>

<% end %>
</html>
